#!/usr/bin/

pipeline {
    agent any
    environment {
        VERSION = ""
    }
    stages {
        stage('Git-Checkout'){
            steps{
                echo "Git-Checkout Started!!"
                git credentialsId: 'GithubCredential', url: 'https://github.com/Mihir013/webhookdemo'
                echo "Git-CheckOut SuccessFully!!"
            }
        }
        stage('Compile') {
            steps {
                echo 'Compiled Successfully!!'
            }
        }
        stage('Build') {
            steps {
                echo 'Flutter Version Check Successfully!!'
            }
        }
        stage('JUnit'){
            steps{
                echo 'JUnit Passes Successfully!!'
            }
        }
        stage('Quality-Gate') {
            steps {
                echo 'Quality Gate Passed Successfully!!'
            }
        }
        stage('Deploy'){
            steps{
                echo 'Deploy Successfully!!'
            }
        }
    }
    post{
        always{
            script {
                    sh '''
                        #!/bin/bash
                        $VERSION=$(grep -A1 'version:' pubspec.yaml | cut -c 10-)
                        echo "Version is: $(grep -A1 'version:' pubspec.yaml | cut -c 10-)"
                        echo "Version from test variable: $VERSION"
                    '''
                    echo ""
                    commit = sh(returnStdout: true, script: 'git log -1 --pretty=%B').trim()
                    String commitMsg = "1. "
                    List commitMsgPre = commit.split("#new")
                    echo "Before Split:"
                    echo "$commit"
                    
                    for(int i=1; i<commitMsgPre.size(); i++){
                        if(i >= commitMsgPre.size()){
                            commitMsg += commitMsgPre.getAt(i)
                        }else{
                            commitMsg += commitMsgPre.getAt(i) + " <br/> ${i+1}. "
                        }
                      echo "$commitMsg"
                    }
                    echo "Commiting to git:"
                    emailext attachLog: true, body: """Hi <b>QA Team,</b>
                    <br />
                    <p>Please Find the below Jenkins job for:</p>
                    <br/>
                    <p>- Build # ${env.BUILD_NUMBER} - ${currentBuild.currentResult}:</p>
                    <br/>
                    <br/>
                    <p> I have uploaded the latest apk version 1.4.2 on a cloud. Please check the following things:</p>
                    <br />
                    <p>${commitMsg}</p>
                    <br />
                    <br />
                    <p> Thank you.</p>
                    <br/>
                    <br/>
                    <p>Regards,</p>
                    <br/>
                    <b>Mihir</b>""", subject: '$DEFAULT_SUBJECT', to: 'mihir.chauhan@akhilalabs.com'
                    emailext attachLog: true, body:"""${currentBuild.currentResult} - Build # ${env.BUILD_NUMBER} - ${env.BUILD_STATUS}:<br/>
                    ${commitMsg} """, subject: '$DEFAULT_SUBJECT', to: 'mihir.chauhan@akhilalabs.com'
                    
                }
            echo 'This will always run'
        }
        success{
            echo 'This will run only if successfull'
        }
        failure{
            echo 'This will run only if build is failed'
        }
        unstable{
            echo 'This will run only if run was marked as unstable!!'
        }
        changed{
            echo 'This will run only if state of pipeline has changed'
        }
    }
}
